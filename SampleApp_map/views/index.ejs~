<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>node.js × sqlite3で作るHeatmaps</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script>
      function deleteRecord(obj) {
        document.getElementById("target").value = obj.value;
        document.getElementById("action").value = "delete";
        document.frm.submit();
      }
    </script>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=visualization"></script>
<script>
// Adding 500 Data Points
var map, pointarray, heatmap;

var tweetData = [];

<% tweets.forEach(function(user){ %>
        tweetData.push({
        location: new google.maps.LatLng(data[i].latitude, data[i].longitude),
        //weight は pos nega判定した値を入れる?
        weight: 1,
        });	
}); 
function initialize() {
  var mapOptions = {
    zoom: 13,
    center: new google.maps.LatLng(35.681382, 139.766084),
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };
  map = new google.maps.Map(document.getElementById('map-canvas'),
      mapOptions);
//  var pointArray = new google.maps.MVCArray(tweetData);

  heatmap = new google.maps.visualization.HeatmapLayer({
    data: tweetData
  });

  heatmap.setMap(map);

// 地図の状態を取得して，適切な粒度で
  google.maps.event.addListener(map, 'bounds_changed', function() {
        bounds=map.getBounds();
        ne=bounds.getNorthEast();
        sw=bounds.getSouthWest();
        map_lng=ne.lng()-sw.lng();
        map_lat=ne.lng()-sw.lng();
  });

}

function toggleHeatmap() {
  heatmap.setMap(heatmap.getMap() ? null : map);
}

function changeGradient() {
  var gradient = [
    'rgba(0, 255, 255, 0)',
    'rgba(0, 255, 255, 1)',
    'rgba(0, 191, 255, 1)',
    'rgba(0, 127, 255, 1)',
    'rgba(0, 63, 255, 1)',
    'rgba(0, 0, 255, 1)',
    'rgba(0, 0, 223, 1)',
    'rgba(0, 0, 191, 1)',
    'rgba(0, 0, 159, 1)',
    'rgba(0, 0, 127, 1)',
    'rgba(63, 0, 91, 1)',
    'rgba(127, 0, 63, 1)',
    'rgba(191, 0, 31, 1)',
    'rgba(255, 0, 0, 1)'
  ]
  heatmap.set('gradient', heatmap.get('gradient') ? null : gradient);
}

function changeRadius() {
  heatmap.set('radius', heatmap.get('radius') ? null : 20);
}

function changeOpacity() {
  heatmap.set('opacity', heatmap.get('opacity') ? null : 0.2);
}

google.maps.event.addDomListener(window, 'load', initialize);

</script>

  </head>
  <body>
    <h1>node.js × sqlite3で作るCRUDアプリケーション</h1>
    <p><%= messages %></p>
    
    <form action="/" method="post" name="frm">
    
    <fieldset style="width:450px">
    <legend>検索フォーム</legend>
    <input type="text" name="searchText" placeholder="%はワイルドカードとして扱われます。" style="width:250px"/>
    <button type="submit" name="submitBtn" value="search">検索</button>
    <button type="submit" name="submitBtn" value="reload">再表示</button>
    </fieldset>
    <br />
    <table border="1">
      <tr bgcolor="#cdcdcd" ><th>　</th><th>id</th><th>名前</th><th>ふりがな</th></tr>
      </tr>
    </table>
    <br />
    <hr />

    <fieldset style="width:350px">
    <legend>登録フォーム</legend>
    名前<input type="text" name="name" /><br />
    ふりがな<input type="text" name="furigana" /><br />
      
    <button type="submit" name="submitBtn" value="add">登録</button>
      
    <input type="hidden" id="target" name="target" value="" >
    <input type="hidden" id="action" name="action" value="" >
    </fieldset>
    </form>
    <div id="panel">
      <button onclick="toggleHeatmap()">Toggle Heatmap</button>
      <button onclick="changeGradient()">Change gradient</button>
      <button onclick="changeRadius()">Change radius</button>
      <button onclick="changeOpacity()">Change opacity</button>
    </div>
    <div id="map-canvas"></div>
  </body> 

</html>

